{"version":3,"file":"static/js/326.2a994bf6.chunk.js","mappings":"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","sources":["components/tttComponents/Square.jsx","components/tttComponents/WinningCells.jsx","components/TTTModal.jsx"],"sourcesContent":["\r\nimport React from 'react';\r\nimport '../../css/TTTModal.css';\r\n\r\n\r\nfunction Square({ value, clickSquare }) {\r\n\r\n    return (\r\n\r\n        <div\r\n            className='square'\r\n            onClick={clickSquare}>\r\n            {value}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Square;","\r\nexport const WinningCells = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n];","\r\nimport '../css/TTTModal.css';\r\nimport Square from './tttComponents/Square';\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { WinningCells } from './tttComponents/WinningCells';\r\n\r\n\r\nfunction TTTModal({ closeModal, openBtn }) {\r\n\r\n    const [table, setTable] = useState(['', '', '', '', '', '', '', '', '']);\r\n    const [player, setPlayer] = useState('O');\r\n    const [result, setResult] = useState({ winner: 'none', state: 'none' });\r\n\r\n    useEffect(() => {\r\n        checkWin();\r\n        checkTie();\r\n        if (player === 'X') {\r\n            setPlayer('O')\r\n        } else {\r\n            setPlayer('X')\r\n        }\r\n    }, [table]);\r\n\r\n    useEffect(() => {\r\n        if (result.state !== 'none') {\r\n            setTimeout(() => {\r\n                alert(`${result.winner} has won!!`);\r\n                restartGame();\r\n            }, 100)\r\n        }\r\n    }, [result]);\r\n\r\n    const chooseSquare = (square) => {\r\n        setTable(table.map((value, index) => {\r\n            if (index === square && value === '') {\r\n                return player\r\n            }\r\n            return value;\r\n        }));\r\n    };\r\n\r\n    const checkWin = () => {\r\n        WinningCells.forEach((currentWin) => {\r\n            const firstPlayer = table[currentWin[0]];\r\n            if (firstPlayer === '') return;\r\n            let currentWinTrue = true\r\n            currentWin.forEach((index) => {\r\n                if (table[index] !== firstPlayer) {\r\n                    currentWinTrue = false\r\n                }\r\n            })\r\n            if (currentWinTrue) {\r\n                setResult({ winner: player, state: 'Won' })\r\n            }\r\n        });\r\n    };\r\n\r\n    const checkTie = () => {\r\n        let filled = true;\r\n        table.forEach((square) => {\r\n            if (square === '') {\r\n                filled = false\r\n            }\r\n        })\r\n        if (filled) {\r\n            setResult({ winner: 'No One', state: 'Tie' })\r\n        }\r\n    };\r\n\r\n    const restartGame = () => {\r\n        setTable(['', '', '', '', '', '', '', '', ''])\r\n        setPlayer('O');\r\n    };\r\n\r\n    const handleCloseTTTModal = () => {\r\n        closeModal(false)\r\n        openBtn(true)\r\n    };\r\n\r\n    return (\r\n\r\n        <div className='tttContainer'>\r\n            <div className='tttModalBg'>\r\n\r\n                <div className='tttCloseBtn '>\r\n                    <button onClick={() => handleCloseTTTModal()}><AiFillCloseCircle /></button>\r\n                </div>\r\n\r\n                <div className='tttTitle'>Tic Tac Toe</div>\r\n\r\n                <div id=\"board\" className=''>\r\n\r\n                    <div className=\"tRow\">\r\n\r\n                        <Square value={table[0]} clickSquare={() => { chooseSquare(0) }} />\r\n                        <Square value={table[1]} clickSquare={() => { chooseSquare(1) }} />\r\n                        <Square value={table[2]} clickSquare={() => { chooseSquare(2) }} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"tRow\">\r\n\r\n                        <Square value={table[3]} clickSquare={() => { chooseSquare(3) }} />\r\n                        <Square value={table[4]} clickSquare={() => { chooseSquare(4) }} />\r\n                        <Square value={table[5]} clickSquare={() => { chooseSquare(5) }} />\r\n                    </div>\r\n\r\n                    <div className=\"tRow\">\r\n\r\n                        <Square value={table[6]} clickSquare={() => { chooseSquare(6) }} />\r\n                        <Square value={table[7]} clickSquare={() => { chooseSquare(7) }} />\r\n                        <Square value={table[8]} clickSquare={() => { chooseSquare(8) }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TTTModal;"],"names":["value","clickSquare","className","onClick","WinningCells","closeModal","openBtn","useState","table","setTable","player","setPlayer","winner","state","result","setResult","useEffect","checkWin","checkTie","setTimeout","alert","restartGame","chooseSquare","square","map","index","forEach","currentWin","firstPlayer","currentWinTrue","filled","id"],"sourceRoot":""}