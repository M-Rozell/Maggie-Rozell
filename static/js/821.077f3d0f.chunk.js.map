{"version":3,"file":"static/js/821.077f3d0f.chunk.js","mappings":"+OAUaA,EAAa,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAI1B,OAAe,IAARA,GACF,SAAC,MAAD,IACU,IAARA,GACF,SAAC,MAAD,IACU,IAARA,GACF,SAAC,MAAD,IACU,IAARA,GACF,SAAC,MAAD,IACU,IAARA,GACF,SAAC,MAAD,KAEA,SAAC,MAAD,GAEP,E,UCpBYC,EAAQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAElC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAYC,EAAAA,EAAAA,QAAO,OAGzBC,EAAAA,EAAAA,YAAU,WACWF,EAAUG,QAAQC,wBAA7BC,QACOC,OAAOC,YAAc,KAElCR,GAAc,EAEjB,GAAE,CAACH,IA+CJ,OAEE,iBAAKY,UAAU,iBAAf,WAEE,mBAAQA,UAAU,gBAChBC,QAAS,WAlCbhB,GAAW,GACXC,GAAQ,EAmCH,EAHH,UAKE,SAAC,MAAD,OAEF,eAAIc,UAAU,aAAd,4BACA,iBAAKA,UAAU,oBAAf,WACE,mBAAQA,UAAU,SAASC,QAAS,kBApCrB,WACnB,IAAMC,EAAkBC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EACxDhB,EAAU,GAAD,eAAKD,GAAL,CAAac,IACvB,CAiC+CI,EAAN,EAAsBC,SAAUjB,EAApE,kBAIA,mBAAQU,UAAU,YAAYC,QAAS,kBAxBxB,WACnB,IAAMO,EAAgBpB,EAAOqB,KAAI,kBAAMN,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,CAAtC,IACjChB,EAAUmB,EACX,CAqBkDE,EAAN,EAAvC,qBAIA,mBAAQV,UAAU,SAASC,QAAS,kBAnCxB,WAChB,IAAMU,EAASvB,EAAOwB,QAAO,SAACC,EAAQC,GAAT,OAAoBD,EAASC,CAA7B,IAC7BC,MAAM,8BAAD,OAA+BJ,GACrC,CAgC+CK,EAAN,EAApC,qBAIF,cAAGhB,UAAU,SAAb,8CAEA,gBAAKA,UAAU,mBAAmBiB,IAAKzB,EAAvC,UACE,eAAIQ,UAAU,SAAd,SAEGZ,EAAOqB,KAAI,SAAC1B,EAAKmC,GAAN,OACV,eAAYlB,UAAU,OAAOmB,cAAe,kBA3E/B,SAACD,GACtB,IAAME,GAAQ,OAAOhC,GACrBgC,EAASC,OAAOH,EAAG,GACnB7B,EAAU+B,EAEX,CAsE2DE,CAAeJ,EAArB,EAA5C,UACE,SAACpC,EAAD,CAAYC,IAAKA,KADVmC,EADC,UAUrB,EAED,G","sources":["components/DiceyBusiness/DieNumbers.jsx","components/DiceyBusiness/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport {\r\n  GiDiceSixFacesOne,\r\n  GiDiceSixFacesTwo,\r\n  GiDiceSixFacesThree,\r\n  GiDiceSixFacesFour,\r\n  GiDiceSixFacesFive,\r\n  GiDiceSixFacesSix,\r\n} from 'react-icons/gi'\r\n\r\nexport const DieNumbers = ({ num }) => {\r\n\r\n  \r\n\r\n   return num === 1 ? (\r\n        <GiDiceSixFacesOne />\r\n      ) : num === 2 ? (\r\n        <GiDiceSixFacesTwo />\r\n      ) : num === 3 ? (\r\n        <GiDiceSixFacesThree />\r\n      ) : num === 4 ? (\r\n        <GiDiceSixFacesFour />\r\n      ) : num === 5 ? (\r\n        <GiDiceSixFacesFive />\r\n      ) : (\r\n        <GiDiceSixFacesSix />\r\n      );\r\n}\r\n\r\n","\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { DieNumbers } from \"./DieNumbers\";\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport \"../../css/Dicey.css\";\r\n\r\n\r\nexport const Dicey = ({ closeModal, openBtn }) => {\r\n\r\n  const [newDie, setNewDie] = useState([]);\r\n  const [disableBtn, setDisableBtn] = useState(false)\r\n  const squareRef = useRef(null)\r\n\r\n  //disable button when height of square is met\r\n  useEffect(() => {\r\n    const { bottom } = squareRef.current.getBoundingClientRect();\r\n    const height = window.innerHeight - 100;\r\n    if (bottom >= height) {\r\n      setDisableBtn(true)\r\n    }\r\n  }, [newDie])\r\n\r\n  //when a dice is dblClicked it disappears\r\n  const handleDblClick = (i) => {\r\n    const newArray = [...newDie];\r\n    newArray.splice(i, 1);\r\n    setNewDie(newArray)\r\n\r\n  }\r\n\r\n  //Array of dice Numbers\r\n  // useEffect(() => {\r\n  //   console.log(newDie);\r\n  // }, [newDie]);\r\n\r\n\r\n  //Close Button\r\n  const handleDiceyClose = () => {\r\n    closeModal(false);\r\n    openBtn(true);\r\n  };\r\n\r\n\r\n  //New Dice Roll\r\n  const handleNewDie = () => {\r\n    const randomDieNumber = Math.floor(Math.random() * 6) + 1;\r\n    setNewDie([...newDie, randomDieNumber]);\r\n  };\r\n\r\n\r\n\r\n\r\n  //Sum of Displayed Dice\r\n  const handleSum = () => {\r\n    const sumDie = newDie.reduce((result, number) => result + number);\r\n    alert(`The sum of all the dice is ${sumDie}`);\r\n  };\r\n\r\n\r\n  //Reroll all Displayed Dice\r\n  const handleReroll = () => {\r\n    const newDieNumbers = newDie.map(() => Math.floor(Math.random() * 6) + 1)\r\n    setNewDie(newDieNumbers)\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"diceyContainer\" >\r\n\r\n      <button className=\"diceyCloseBtn\"\r\n        onClick={() => {\r\n          handleDiceyClose();\r\n        }}\r\n      >\r\n        <AiFillCloseCircle />\r\n      </button>\r\n      <h1 className=\"diceGameH1\">Roll The Dice</h1>\r\n      <div className=\"diceyBtnContainer\" >\r\n        <button className=\"newDie\" onClick={() => handleNewDie()} disabled={disableBtn}>\r\n          New\r\n        </button>\r\n\r\n        <button className=\"rerollDie\" onClick={() => handleReroll()}>\r\n          Reroll\r\n        </button>\r\n\r\n        <button className=\"sumDie\" onClick={() => handleSum()}>\r\n          Sum\r\n        </button>\r\n      </div>\r\n      <p className=\"diceyP\">DblClick on a die to remove it.</p>\r\n\r\n      <div className=\"diceContainerDiv\" ref={squareRef}>\r\n        <ul className=\"diceUl\" >\r\n\r\n          {newDie.map((num, i) => (\r\n            <li key={i} className=\"dice\" onDoubleClick={() => handleDblClick(i)}>\r\n              <DieNumbers num={num} />\r\n            </li>\r\n          ))}\r\n\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dicey;\r\n"],"names":["DieNumbers","num","Dicey","closeModal","openBtn","useState","newDie","setNewDie","disableBtn","setDisableBtn","squareRef","useRef","useEffect","current","getBoundingClientRect","bottom","window","innerHeight","className","onClick","randomDieNumber","Math","floor","random","handleNewDie","disabled","newDieNumbers","map","handleReroll","sumDie","reduce","result","number","alert","handleSum","ref","i","onDoubleClick","newArray","splice","handleDblClick"],"sourceRoot":""}